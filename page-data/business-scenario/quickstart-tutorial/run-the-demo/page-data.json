{"componentChunkName":"component---src-pages-business-scenario-quickstart-tutorial-run-the-demo-mdx","path":"/business-scenario/quickstart-tutorial/run-the-demo/","result":{"pageContext":{"frontmatter":{"title":"Quickstart Tutorial","description":"Simple end-to-end deployment scenario for the KContainer Shipping Container Reference Implementation.","tabs":["Introduction","Deploy on IBM OpenLabs","Deploy on OpenShift Playgrounds","Run the Demo"]},"relativePagePath":"/business-scenario/quickstart-tutorial/run-the-demo.mdx","titleType":"append","MdxNode":{"id":"113e98b7-5b68-5f63-9276-a5de3e3f799f","children":[],"parent":"13c18d9f-1b34-59c9-ac10-337a7c477abd","internal":{"content":"---\ntitle: Quickstart Tutorial\ndescription: Simple end-to-end deployment scenario for the KContainer Shipping Container Reference Implementation.\ntabs: ['Introduction', 'Deploy on IBM OpenLabs', 'Deploy on OpenShift Playgrounds', 'Run the Demo']\n---\n\n## Run the Demo\n\n### KContainer Manufacturer creating an order\n\nOrders are created via the manufacturer. For a reminder of the different personas, view the [Scenario Overview](/business-scenario/scenario-overview/).\n\n* Navigate to `http://kc-ui-shipping.cluster.local` (replacing the actual URL of the `kc-ui` microservice with the value output while running the quickstart script or available via `oc get route kc-ui`) to access the UI home page:\n\n![kc-home](images/kc-home.png)\n\nTo log in to the home page, you will need the following user email and password:\n\n- Email: eddie@email.com\n- Password: Eddie\n\nThe initial UI homepage shows an illustrated version of the business process. There are four tiles that can be used to simulate different parts of the outlined business process.\n\n* From the `Initiate Orders - Manufacturer` create a new 'fresh product' order to ship overseas. This simulates the activity that would usually be carried out by the manufacturer in our scenario.\n\n<InlineNotification kind=\"warning\">Do we need to have specific input here for containers to match/be found?</InlineNotification>\n\nTo represent different manufacturers, the first select box has been designed to support multiple scenarios in the future. For the purposes of this quickstart tutorial, select 'GoodManuf'.\n\n![](images/kc-manuf-select.png)\n\nOnce the manufacturer is selected, a list of existing orders will be displayed.\n\n![](images/kc-orders.png)\n\n* Select one order using the `Arrow` icon. This will allow you to view the order details:\n\n![](images/kc-order.png)\n\nAs illustrated in the CQRS diagram:\n\nThe creation of the order goes to the [Order Command microservice](/microservices/order-command/) which publishes an `OrderCreated` event to the `orders` topic and then consumes it to persist the data to its database. See the [source code here](https://github.com/ibm-cloud-architecture/refarch-kc-order-ms/blob/master/order-command-ms/src/main/java/ibm/gse/orderms/domain/service/ShippingOrderService.java#L39-L47).\n\n* We can create a consumer to take messages from the `orders` topic by running the following command from the same terminal the quickstart deployment script was run from:\n\n```oc rsh my-cluster-kafka-0 bin/kafka-console-consumer.sh --bootstrap-server localhost:9092 --from-beginning --timeout-ms 10000 --topic orders```\n\nAfter running this, you should be able to see the following order with the status of `pending` and the type of event being `OrderCreated`.\n\n```json\n{\"payload\":{\n    \"orderID\":\"1fcccdf2-e29d-4b30-8e52-8116dc2a01ff\",\n    \"productID\":\"Carrot\",\n    \"customerID\":\"GoodManuf\",\n    \"quantity\":10000,\n    \"pickupAddress\": \"...\",\n    \"expectedDeliveryDate\":\"2019-03-31T13:30Z\",\n    \"status\":\"pending\"},\n\"type\":\"OrderCreated\",\n\"version\":\"1\"}\n\n```\n\n### K Container Shipment Manager looking at Orders\n\n* From the home page, click on the Shipment Manager - Shipping Inc tile:\n\n![](images/shipment-inc.png)\n\nThe home page lists the order that the shipment company received in the previous step.\n\n![](images/kc-shipment-home.png)\n\nThe status of events will be modified over time while the order is processed down stream by the voyage and container services. The following sequence diagram illustrates the flow:\n\n![](images/kc-order-seq-diag.png)\n\nLooking at the events in the voyage service\n```\nvoyages_1     |  emitting {\"timestamp\":1548788544290,\"type\":\"OrderAssigned\",\"version\":\"1\",\"payload\":{\"voyageID\":100,\"orderID\":\"1fcccdf2-e29d-4b30-8e52-8116dc2a01ff\"}}\n```\n\nor on the `orders` topic:\n\n```json\n{\"timestamp\":1548792921679,\n\"type\":\"OrderAssigned\",\"version\":\"1\",\n\"payload\":{\"voyageID\":100,\"orderID\":\"1fcccdf2-e29d-4b30-8e52-8116dc2a01ff\"}}\n\n```\n\n### View Fleet information\n\n<InlineNotification kind=\"warning\"><strong>UNDER CONSTRUCTION</strong></InlineNotification>\n\nNote: *The term 'Blue Water' referred to here means at sea (including ports and coastal waters).*\n\n* From the home page, select the `Simulate Blue Water` tile. Select one of the available fleet. As of now, only the North Pacific has fleet data:\n\n![](images/kc-fleet-select.png)\n\nThe fleet panel lists the ships, their location and status and a map:\n\n![](images/kc-fleet-home.png)\n\n* Select one ship with the edit button. You will see the ship detail view:\n\n![](images/kc-ship-detail.png)\n\nThis view contains information about the ship itself, it's position at sea and the load. There is also an option to simulate a number of disaster scenarios that could play out at sea, however this functionality is not yet implemented.\n\nThere are currently three pre-defined scenarios, which will be implemented in the future:\n\n* Fire affecting some containers\n* Reefer down\n* Ship experiencing conditions that cause reefers to exceed desired temperature.\n\n_This quickstart guide will be updated as the project evolves and new capability is added. If you have any issues or queries with this quickstart guide, please [raise an issue](https://github.com/ibm-cloud-architecture/refarch-kc/issues) in the github repo._\n","type":"Mdx","contentDigest":"38e4fa86bac31d30dc1b5d0f471e6803","counter":355,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"Quickstart Tutorial","description":"Simple end-to-end deployment scenario for the KContainer Shipping Container Reference Implementation.","tabs":["Introduction","Deploy on IBM OpenLabs","Deploy on OpenShift Playgrounds","Run the Demo"]},"exports":{},"rawBody":"---\ntitle: Quickstart Tutorial\ndescription: Simple end-to-end deployment scenario for the KContainer Shipping Container Reference Implementation.\ntabs: ['Introduction', 'Deploy on IBM OpenLabs', 'Deploy on OpenShift Playgrounds', 'Run the Demo']\n---\n\n## Run the Demo\n\n### KContainer Manufacturer creating an order\n\nOrders are created via the manufacturer. For a reminder of the different personas, view the [Scenario Overview](/business-scenario/scenario-overview/).\n\n* Navigate to `http://kc-ui-shipping.cluster.local` (replacing the actual URL of the `kc-ui` microservice with the value output while running the quickstart script or available via `oc get route kc-ui`) to access the UI home page:\n\n![kc-home](images/kc-home.png)\n\nTo log in to the home page, you will need the following user email and password:\n\n- Email: eddie@email.com\n- Password: Eddie\n\nThe initial UI homepage shows an illustrated version of the business process. There are four tiles that can be used to simulate different parts of the outlined business process.\n\n* From the `Initiate Orders - Manufacturer` create a new 'fresh product' order to ship overseas. This simulates the activity that would usually be carried out by the manufacturer in our scenario.\n\n<InlineNotification kind=\"warning\">Do we need to have specific input here for containers to match/be found?</InlineNotification>\n\nTo represent different manufacturers, the first select box has been designed to support multiple scenarios in the future. For the purposes of this quickstart tutorial, select 'GoodManuf'.\n\n![](images/kc-manuf-select.png)\n\nOnce the manufacturer is selected, a list of existing orders will be displayed.\n\n![](images/kc-orders.png)\n\n* Select one order using the `Arrow` icon. This will allow you to view the order details:\n\n![](images/kc-order.png)\n\nAs illustrated in the CQRS diagram:\n\nThe creation of the order goes to the [Order Command microservice](/microservices/order-command/) which publishes an `OrderCreated` event to the `orders` topic and then consumes it to persist the data to its database. See the [source code here](https://github.com/ibm-cloud-architecture/refarch-kc-order-ms/blob/master/order-command-ms/src/main/java/ibm/gse/orderms/domain/service/ShippingOrderService.java#L39-L47).\n\n* We can create a consumer to take messages from the `orders` topic by running the following command from the same terminal the quickstart deployment script was run from:\n\n```oc rsh my-cluster-kafka-0 bin/kafka-console-consumer.sh --bootstrap-server localhost:9092 --from-beginning --timeout-ms 10000 --topic orders```\n\nAfter running this, you should be able to see the following order with the status of `pending` and the type of event being `OrderCreated`.\n\n```json\n{\"payload\":{\n    \"orderID\":\"1fcccdf2-e29d-4b30-8e52-8116dc2a01ff\",\n    \"productID\":\"Carrot\",\n    \"customerID\":\"GoodManuf\",\n    \"quantity\":10000,\n    \"pickupAddress\": \"...\",\n    \"expectedDeliveryDate\":\"2019-03-31T13:30Z\",\n    \"status\":\"pending\"},\n\"type\":\"OrderCreated\",\n\"version\":\"1\"}\n\n```\n\n### K Container Shipment Manager looking at Orders\n\n* From the home page, click on the Shipment Manager - Shipping Inc tile:\n\n![](images/shipment-inc.png)\n\nThe home page lists the order that the shipment company received in the previous step.\n\n![](images/kc-shipment-home.png)\n\nThe status of events will be modified over time while the order is processed down stream by the voyage and container services. The following sequence diagram illustrates the flow:\n\n![](images/kc-order-seq-diag.png)\n\nLooking at the events in the voyage service\n```\nvoyages_1     |  emitting {\"timestamp\":1548788544290,\"type\":\"OrderAssigned\",\"version\":\"1\",\"payload\":{\"voyageID\":100,\"orderID\":\"1fcccdf2-e29d-4b30-8e52-8116dc2a01ff\"}}\n```\n\nor on the `orders` topic:\n\n```json\n{\"timestamp\":1548792921679,\n\"type\":\"OrderAssigned\",\"version\":\"1\",\n\"payload\":{\"voyageID\":100,\"orderID\":\"1fcccdf2-e29d-4b30-8e52-8116dc2a01ff\"}}\n\n```\n\n### View Fleet information\n\n<InlineNotification kind=\"warning\"><strong>UNDER CONSTRUCTION</strong></InlineNotification>\n\nNote: *The term 'Blue Water' referred to here means at sea (including ports and coastal waters).*\n\n* From the home page, select the `Simulate Blue Water` tile. Select one of the available fleet. As of now, only the North Pacific has fleet data:\n\n![](images/kc-fleet-select.png)\n\nThe fleet panel lists the ships, their location and status and a map:\n\n![](images/kc-fleet-home.png)\n\n* Select one ship with the edit button. You will see the ship detail view:\n\n![](images/kc-ship-detail.png)\n\nThis view contains information about the ship itself, it's position at sea and the load. There is also an option to simulate a number of disaster scenarios that could play out at sea, however this functionality is not yet implemented.\n\nThere are currently three pre-defined scenarios, which will be implemented in the future:\n\n* Fire affecting some containers\n* Reefer down\n* Ship experiencing conditions that cause reefers to exceed desired temperature.\n\n_This quickstart guide will be updated as the project evolves and new capability is added. If you have any issues or queries with this quickstart guide, please [raise an issue](https://github.com/ibm-cloud-architecture/refarch-kc/issues) in the github repo._\n","fileAbsolutePath":"/home/runner/work/refarch-kc/refarch-kc/docs/src/pages/business-scenario/quickstart-tutorial/run-the-demo.mdx"}}},"staticQueryHashes":["1054721580","1054721580","1364590287","2102389209","2102389209","2456312558","2746626797","3018647132","3037994772","768070550"]}